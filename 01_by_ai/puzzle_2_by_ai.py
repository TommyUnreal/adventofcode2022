"""Preparation code. This code was not generated by the LLM."""
import os

__location__ = os.path.realpath(os.path.join(os.getcwd(), os.path.dirname(__file__)))
input_file   = os.path.join(__location__,"input.txt")

"""
--------------------------------------------------------------------------------
Solving Advent of Code with Large Language Model
Following input was entered to https://huggingface.co/bigscience/bloom
--------------------------------------------------------------------------------
Generation of text input for LLM: 1
Generation to get a working code: 5
Note: I also forced the LLM to generate comments when I had working code.
--------------------------------------------------------------------------------
Input for LLM as follows:
--------------------------------------------------------------------------------
Task:
- define an empty list called "elves" a total_cal variable
- open an input text file and read it line by line
  - if the line is int, add it to the temp variable
  - if an empty line is found, append total_cal to list  "elves" and reset total_cal to 0
- find the 3 highest values in the list "elves" sum them  up and print the result

Python code solution:
"""

total_cal = 0 # Initialize a total variable to 0
list_elves = [] # Create an empty list called "elves"

with open(input_file) as f: # Open a file named "input.txt" and assign it to the variable "f"
    for line in f: # Loop from line to line
        temp = line.strip() # Get rid of the new line character of the line
        if len(temp): # If the length of temp is not 0
            total_cal += int(temp) # Add the content of temp to the total variable
        elif not temp: # If the line is an empty line
            list_elves.append(total_cal) # Append the total variable to list "elves"
            total_cal = 0 # Reset the total variable

print(sum(sorted(list_elves, reverse=True)[0:3])) # Print the sum of the 3 highest numbers in the list "elves"